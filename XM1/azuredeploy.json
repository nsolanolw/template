{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "resourcesApiVersion": "2018-05-01"
  },
  "parameters": {
    "deploymentUniqueID":{
      "type": "string"
    },
    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "templateLinkBase": {
      "type": "string",
      "defaultValue": "[uri(replace(json(string(deployment().properties.templateLink)).uri,' ','%20'), '.')]"
    },
    "templateLinkAccessToken": {
      "type": "string",
      "defaultValue": ""
    },
    "solrConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },
    "prefix": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },

    "sitecoreAdminPassword": {
      "type": "string",
      "minLength": 8
    },
    "licenseXml": {
      "type": "string",
      "minLength": 1
    },
    "sitecoreSKU": {
      "type": "string",
      "allowedValues": [
        "Extra Small",
        "Small",
        "Medium",
        "Large",
        "Extra Large"
      ],
      "defaultValue": "Extra Small",
      "metadata": {
        "description": "Sitecore SKU controls the sizes and service levels of the provisioned resources"
      }
    },

    "sqlServerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-sql')]"
    },
    "sqlServerLogin": {
      "type": "string",
      "minLength": 1
    },
    "sqlServerPassword": {
      "type": "string",
      "minLength": 8
    },

    "sqlServerVersion": {
      "type": "string",
      "defaultValue": "12.0"
    },
    "sqlDatabaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },

    "coreSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-core-db')]"
    },
    "masterSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-master-db')]"
    },
    "securitySqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-core-db')]"
    },
    "webSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-web-db')]"
    },
    "formsSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-forms-db')]"
    },

    "coreSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "coreuser"
    },
    "coreSqlDatabasePassword": {
      "type": "string",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('core', parameters('passwordSalt'))), uniqueString('core', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('core', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "masterSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "masteruser"
    },
    "masterSqlDatabasePassword": {
      "type": "string",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('master', parameters('passwordSalt'))), uniqueString('master', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('master', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "securitySqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "securityuser"
    },
    "securitySqlDatabasePassword": {
      "type": "string",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('security', parameters('passwordSalt'))), uniqueString('security', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('security', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "webSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "webuser"
    },
    "webSqlDatabasePassword": {
      "type": "string",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('web', parameters('passwordSalt'))), uniqueString('web', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('web', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },
    "formsSqlDatabaseUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "formsuser"
    },
    "formsSqlDatabasePassword": {
      "type": "string",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('forms', parameters('passwordSalt'))), uniqueString('forms', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('forms', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },

    "redisCacheName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-redis')]"
    },

    "searchServiceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-as')]"
    },
    "searchServiceLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "searchServiceReplicaCount": {
      "type": "int",
      "defaultValue": 1
    },
    "solrConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },							 
    "useApplicationInsights": {
      "type": "bool",
      "defaultValue": true
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-ai')]"
    },
    "applicationInsightsLocation": {
      "type": "string",
      "defaultValue": "East US"
    },
    "storeSitecoreCountersInApplicationInsights": {
      "type": "bool",
      "defaultValue": false
    },
    "applicationInsightsPricePlan": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('prefix'), '-ai-pp')]"
    },

    "siMsDeployPackageUrl": {
      "type": "string",
      "minLength": 1
    },
    "cmMsDeployPackageUrl": {
      "type": "string",
      "minLength": 1
    },
    "cdMsDeployPackageUrl": {
      "type": "string",
      "minLength": 1
    },
    "jssMsDeployPackageUrl": {
      "type": "string",
      "minLength": 1
    },
    "jssCDMsDeployPackageUrl": {
      "type": "string",
      "minLength": 1
    },
    "setCompatibilityLevelMsDeployPackageUrl": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "https://github.com/Sitecore/Sitecore-Azure-Quickstart-Templates/releases/download/v1.5.0/SetCompatibilityLevel.scwdp.zip"
    },
    "securityClientIp": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },
    "securityClientIpMask": {
      "type": "string",
      "defaultValue": "0.0.0.0"
    },

    "authCertificateName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('prefix'), '-auth')]"
    },
    "authCertificateBlob": {
      "type": "string",
      "minLength": 1
    },
    "authCertificatePassword": {
      "type": "string",
      "minLength": 1
    },

    "siClientSecret": {
      "type": "string",
      "minLength": 6,
      "defaultValue": "[toUpper(replace(guid(uniqueString('siClientSecret', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '-',''))]"
    },

    "telerikEncryptionKey": {
      "type": "string",
      "minLength": 8,
      "defaultValue": "[concat(toUpper(uniqueString('telerik', parameters('passwordSalt'))), uniqueString('telerik', parameters('sqlServerPassword'), parameters('passwordSalt')), toUpper(uniqueString('telerik', parameters('sitecoreAdminPassword'), parameters('passwordSalt'))), '4@')]"
    },

    "passwordSalt": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().id]"
    },

    "aseName": {
      "type": "string",
      "defaultValue": ""
    },
    "aseResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "cmNodeJsVersion": {
      "type": "string",
      "defaultValue": "8.11.1"
    },
    "cdNodeJsVersion": {
      "type": "string",
      "defaultValue": "8.11.1"
    },

    "environmentType": {
      "type": "string",
      "defaultValue": "Non-Production"
    },

    "hostingPlans": {
      "type": "Array",
      "defaultValue": [
        {
          "name": "[concat(parameters('prefix'),'-cm-hp')]",
          "scaling": "S2"
        },
        {
          "name": "[concat(parameters('prefix'),'-cd-hp')]",
          "scaling": "S2"
        }
      ]
    },
    "webApps": {
      "type": "Array",
      "defaultValue": [
        {
          "name": "[concat(parameters('prefix'),'-cm')]",
          "role": "cm",
          "hostingPlan": "[concat(parameters('prefix'),'-cm-hp')]"
        },
        {
          "name": "[concat(parameters('prefix'),'-si')]",
          "role": "si",
          "hostingPlan": "[concat(parameters('prefix'),'-cm-hp')]"
        },
        {
          "name": "[concat(parameters('prefix'),'-cd')]",
          "role": "cd",
          "hostingPlan": "[concat(parameters('prefix'),'-cd-hp')]"
        }
      ]
    },
    "cdWebApps": {
      "type": "Array",
      "defaultValue": [
        {
          "name": "[concat(parameters('prefix'),'-cd')]",
          "role": "cd",
          "hostingPlan": "[concat(parameters('prefix'),'-cd-hp')]"
        }
      ]
    },

    "cmWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'-cm')]"
    },
    "siWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'-si')]"
    },

    "searchProvider": {
      "type": "string",
      "defaultValue": "Azure"
    },
    "solrWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'-solr')]"
    },
    "solrHostingPlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'),'-solr-hp')]"
    },
    "solrHostingPlanSkuName": {
      "type": "string",
      "defaultValue": "S1"
    },
    "installJssModule": {
      "type": "bool",
      "defaultValue": false
    },
    "rootDeployPackageUrl": {
      "type": "string"
    }
  },
  "resources": [
    

    {
      "comments": "Generate all default Sitecore's ressources on Azure",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-infrastructure')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/infrastructure.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {

          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sitecoreSKU": {
            "value": "[parameters('sitecoreSKU')]"
          },

          "sqlServerName": {
            "value": "[parameters('sqlServerName')]"
          },
          "sqlServerLogin": {
            "value": "[parameters('sqlServerLogin')]"
          },
          "sqlServerPassword": {
            "value": "[parameters('sqlServerPassword')]"
          },

          "sqlServerVersion": {
            "value": "[parameters('sqlServerVersion')]"
          },
          "sqlDatabaseCollation": {
            "value": "[parameters('sqlDatabaseCollation')]"
          },

          "coreSqlDatabaseName": {
            "value": "[parameters('coreSqlDatabaseName')]"
          },
          "masterSqlDatabaseName": {
            "value": "[parameters('masterSqlDatabaseName')]"
          },
          "webSqlDatabaseName": {
            "value": "[parameters('webSqlDatabaseName')]"
          },
          "formsSqlDatabaseName": {
            "value": "[parameters('formsSqlDatabaseName')]"
          },

          "authCertificateName": {
            "value": "[parameters('authCertificateName')]"
          },
          "authCertificateBlob": {
            "value": "[parameters('authCertificateBlob')]"
          },
          "authCertificatePassword": {
            "value": "[parameters('authCertificatePassword')]"
          },

          "deployAzureSearch": {
            "value": "[empty(parameters('solrConnectionString'))]"
          },

          "searchServiceName": {
            "value": "[parameters('searchServiceName')]"
          },
          "searchServiceLocation": {
            "value": "[parameters('searchServiceLocation')]"
          },
          "searchServiceReplicaCount": {
            "value": "[parameters('searchServiceReplicaCount')]"
          },

          "redisCacheName": {
            "value": "[parameters('redisCacheName')]"
          },

          "useApplicationInsights": {
            "value": "[parameters('useApplicationInsights')]"
          },
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "applicationInsightsLocation": {
            "value": "[parameters('applicationInsightsLocation')]"
          },
          "applicationInsightsPricePlan": {
            "value": "[parameters('applicationInsightsPricePlan')]"
          },

          "aseName": {
            "value": "[parameters('aseName')]"
          },
          "aseResourceGroupName": {
            "value": "[parameters('aseResourceGroupName')]"
          },
          "hostingPlans": {
            "value": "[parameters('hostingPlans')]"
          },
          "webApps": {
            "value": "[parameters('webApps')]"
          },
          "cdWebApps": {
            "value": "[parameters('cdWebApps')]"
          },
          "cmWebAppName": {
            "value": "[parameters('cmWebAppName')]"
          },
          "siWebAppName": {
            "value": "[parameters('siWebAppName')]"
          }
        }
      }
    },
    {
      "comments": "Generate all default Sitecore's ressources on Azure",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-infrastructure-elastic-pool')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/infrastructure-elastic-pool.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {

          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlServerName": {
            "value": "[parameters('sqlServerName')]"
          },
          "coreSqlDatabaseName": {
            "value": "[parameters('coreSqlDatabaseName')]"
          },
          "masterSqlDatabaseName": {
            "value": "[parameters('masterSqlDatabaseName')]"
          },
          "webSqlDatabaseName": {
            "value": "[parameters('webSqlDatabaseName')]"
          },
          "formsSqlDatabaseName": {
            "value": "[parameters('formsSqlDatabaseName')]"
          }
        }
      },
      "dependsOn": [
        "[concat(parameters('deploymentUniqueID'), '-infrastructure')]"
      ]
    },
    {
      "comments": "Deployment of Sitecore instances (Identity Server and Content Manager)",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-application-si-cm')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/applicationSiCm.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {

          "infrastructure": {
            "value": "[reference(concat(parameters('deploymentUniqueID'), '-infrastructure')).outputs.infrastructure.value]"
          },

          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },

          "sitecoreAdminPassword": {
            "value": "[parameters('sitecoreAdminPassword')]"
          },
          "licenseXml": {
            "value": "[parameters('licenseXml')]"
          },

          "sqlServerLogin": {
            "value": "[parameters('sqlServerLogin')]"
          },
          "sqlServerPassword": {
            "value": "[parameters('sqlServerPassword')]"
          },

          "coreSqlDatabaseName": {
            "value": "[parameters('coreSqlDatabaseName')]"
          },
          "masterSqlDatabaseName": {
            "value": "[parameters('masterSqlDatabaseName')]"
          },
          "securitySqlDatabaseName": {
            "value": "[parameters('securitySqlDatabaseName')]"
          },
          "webSqlDatabaseName": {
            "value": "[parameters('webSqlDatabaseName')]"
          },
          "formsSqlDatabaseName": {
            "value": "[parameters('formsSqlDatabaseName')]"
          },

          "coreSqlDatabaseUserName": {
            "value": "[parameters('coreSqlDatabaseUserName')]"
          },
          "coreSqlDatabasePassword": {
            "value": "[parameters('coreSqlDatabasePassword')]"
          },
          "masterSqlDatabaseUserName": {
            "value": "[parameters('masterSqlDatabaseUserName')]"
          },
          "masterSqlDatabasePassword": {
            "value": "[parameters('masterSqlDatabasePassword')]"
          },
          "securitySqlDatabaseUserName": {
            "value": "[parameters('securitySqlDatabaseUserName')]"
          },
          "securitySqlDatabasePassword": {
            "value": "[parameters('securitySqlDatabasePassword')]"
          },
          "webSqlDatabaseUserName": {
            "value": "[parameters('webSqlDatabaseUserName')]"
          },
          "webSqlDatabasePassword": {
            "value": "[parameters('webSqlDatabasePassword')]"
          },
          "formsSqlDatabaseUserName": {
            "value": "[parameters('formsSqlDatabaseUserName')]"
          },
          "formsSqlDatabasePassword": {
            "value": "[parameters('formsSqlDatabasePassword')]"
          },

          "searchServiceName": {
            "value": "[parameters('searchServiceName')]"
          },

          "solrConnectionString": {
            "value": "[parameters('solrConnectionString')]"
          },
          "useApplicationInsights": {
            "value": "[parameters('useApplicationInsights')]"
          },
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "storeSitecoreCountersInApplicationInsights": {
            "value": "[parameters('storeSitecoreCountersInApplicationInsights')]"
          },

          "siMsDeployPackageUrl": {
            "value": "[parameters('siMsDeployPackageUrl')]"
          },
          "cmMsDeployPackageUrl": {
            "value": "[parameters('cmMsDeployPackageUrl')]"
          },
          "siClientSecret": {
            "value": "[parameters('siClientSecret')]"
          },
          "setCompatibilityLevelMsDeployPackageUrl": {
            "value": "[parameters('setCompatibilityLevelMsDeployPackageUrl')]"
          },
          "securityClientIp": {
            "value": "[parameters('securityClientIp')]"
          },
          "securityClientIpMask": {
            "value": "[parameters('securityClientIpMask')]"
          },

          "telerikEncryptionKey": {
            "value": "[parameters('telerikEncryptionKey')]"
          },

          "passwordSalt": {
            "value": "[parameters('passwordSalt')]"
          },

          "cmNodeJsVersion": {
            "value": "[parameters('cmNodeJsVersion')]"
          },
          "environmentType": {
            "value": "[parameters('environmentType')]"
          },
          "cmWebAppName": {
            "value": "[parameters('cmWebAppName')]"
          },
          "siWebAppName": {
            "value": "[parameters('siWebAppName')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure-elastic-pool'))]"
      ]
    },
    {
      "comments": "Deployment of Sitecore instances (Content Delivery)",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-application-cd')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/applicationCd.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {

          "infrastructure": {
            "value": "[reference(concat(parameters('deploymentUniqueID'), '-infrastructure')).outputs.infrastructure.value]"
          },

          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },

          "sitecoreAdminPassword": {
            "value": "[parameters('sitecoreAdminPassword')]"
          },
          "licenseXml": {
            "value": "[parameters('licenseXml')]"
          },

          "sqlServerLogin": {
            "value": "[parameters('sqlServerLogin')]"
          },
          "sqlServerPassword": {
            "value": "[parameters('sqlServerPassword')]"
          },
          "securitySqlDatabaseName": {
            "value": "[parameters('securitySqlDatabaseName')]"
          },
          "webSqlDatabaseName": {
            "value": "[parameters('webSqlDatabaseName')]"
          },
          "formsSqlDatabaseName": {
            "value": "[parameters('formsSqlDatabaseName')]"
          },
          "securitySqlDatabaseUserName": {
            "value": "[parameters('securitySqlDatabaseUserName')]"
          },
          "securitySqlDatabasePassword": {
            "value": "[parameters('securitySqlDatabasePassword')]"
          },
          "webSqlDatabaseUserName": {
            "value": "[parameters('webSqlDatabaseUserName')]"
          },
          "webSqlDatabasePassword": {
            "value": "[parameters('webSqlDatabasePassword')]"
          },
          "formsSqlDatabaseUserName": {
            "value": "[parameters('formsSqlDatabaseUserName')]"
          },
          "formsSqlDatabasePassword": {
            "value": "[parameters('formsSqlDatabasePassword')]"
          },
          "searchServiceName": {
            "value": "[parameters('searchServiceName')]"
          },

          "solrConnectionString": {
            "value": "[parameters('solrConnectionString')]"
          },

          "redisCacheName": {
            "value": "[parameters('redisCacheName')]"
          },

          "useApplicationInsights": {
            "value": "[parameters('useApplicationInsights')]"
          },
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "storeSitecoreCountersInApplicationInsights": {
            "value": "[parameters('storeSitecoreCountersInApplicationInsights')]"
          },

          "cdMsDeployPackageUrl": {
            "value": "[parameters('cdMsDeployPackageUrl')]"
          },

          "passwordSalt": {
            "value": "[parameters('passwordSalt')]"
          },

          "cdNodeJsVersion": {
            "value": "[parameters('cdNodeJsVersion')]"
          },

          "environmentType": {
            "value": "[parameters('environmentType')]"
          },
          "rootDeployPackageUrl": {
            "value": "[parameters('rootDeployPackageUrl')]"
          }

        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-application-si-cm'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure-elastic-pool'))]"
      ]
    },
    {
      "comments": "Installation of Bootloader on Content Manager and Content Delivery",
      "copy": {
        "name": "cdBootLoader",
        "count": "[length(parameters('webApps'))]"
      },
      "condition": "[or(equals(parameters('webApps')[copyIndex()].role,'cm'),equals(parameters('webApps')[copyIndex()].role,'cd'))]",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-bootloader-', parameters('webApps')[copyIndex()].name)]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'addons/bootloader.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {

          "webAppName": {
            "value": "[parameters('webApps')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "rootDeployPackageUrl": {
            "value": "[parameters('rootDeployPackageUrl')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-application-si-cm'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-application-cd'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure-elastic-pool'))]"
      ]
    },
    {
      "comments": "Installation of Jss Module",
      "condition": "[parameters('installJssModule')]",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-jss-module')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/jss-module.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "cmWebAppName": {
            "value": "[parameters('cmWebAppName')]"
          },
          "sqlServerFqdn": {
            "value": "[reference(concat(parameters('deploymentUniqueID'), '-infrastructure')).outputs.infrastructure.value.sqlServerFqdn]"
          },
          "sqlServerLogin": {
            "value": "[parameters('sqlServerLogin')]"
          },
          "sqlServerPassword": {
            "value": "[parameters('sqlServerPassword')]"
          },
          "coreSqlDatabaseName": {
            "value": "[parameters('coreSqlDatabaseName')]"
          },
          "masterSqlDatabaseName": {
            "value": "[parameters('masterSqlDatabaseName')]"
          },
          "webApps": {
            "value": "[parameters('webApps')]"
          },
          "cdWebApps": {
            "value": "[parameters('cdWebApps')]"
          },
          "jssMsDeployPackageUrl": {
            "value": "[parameters('jssMsDeployPackageUrl')]"
          },
          "jssCDMsDeployPackageUrl": {
            "value": "[parameters('jssCDMsDeployPackageUrl')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-application-si-cm'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-application-cd'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure'))]",
        "cdBootLoader",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure-elastic-pool'))]"
      ]
    },
    {
      "comments": "Installation of patches configuration & transformations for CM (if more than one Content Delivery)",
      "condition": "[greater(length(parameters('cdWebApps')),1)]",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-custom-cm')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/custom-cm.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlServerFqdn": {
            "value": "[concat(parameters('prefix'),'-sql.database.windows.net')]"
          },
          "sqlServerLogin": {
            "value": "[parameters('sqlServerLogin')]"
          },
          "sqlServerPassword": {
            "value": "[parameters('sqlServerPassword')]"
          },
          "masterSqlDatabaseName": {
            "value": "[parameters('masterSqlDatabaseName')]"
          },
          "cdWebApps": {
            "value": "[parameters('cdWebApps')]"
          },
          "cmWebAppName": {
            "value": "[parameters('cmWebAppName')]"
          },
          "rootDeployPackageUrl": {
            "value": "[parameters('rootDeployPackageUrl')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-application-si-cm'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-application-cd'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure'))]",
        "cdBootLoader",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-jss-module'))]",
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-infrastructure-elastic-pool'))]"
      ]
    },
    {
      "comments":"Installation of common patches configuration & transformation for CDs ",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-custom-cd-common')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/custom-cd-common.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "cdWebApps": {
            "value": "[parameters('cdWebApps')]"
          },
          "rootDeployPackageUrl": {
            "value": "[parameters('rootDeployPackageUrl')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-custom-cm'))]"
      ]
    },
    {
      "comments":"Installation of patches configuration & transformation for CDs (only when more than 1 CD)",
      "condition": "[greater(length(parameters('cdWebApps')),1)]",
      "apiVersion": "[variables('resourcesApiVersion')]",
      "name": "[concat(parameters('deploymentUniqueID'), '-custom-cd-multiple')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(uri(parameters('templateLinkBase'), 'nested/custom-cd-multiple.json'), parameters('templateLinkAccessToken'))]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "cdWebApps": {
            "value": "[parameters('cdWebApps')]"
          },
          "rootDeployPackageUrl": {
            "value": "[parameters('rootDeployPackageUrl')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat(parameters('deploymentUniqueID'), '-custom-cd-common'))]"
      ]
    }
    
  ]
}
